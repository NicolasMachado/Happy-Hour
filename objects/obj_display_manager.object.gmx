<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_display_manager</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// display properties

ini_open("conf.ini");
idealheight = ini_read_real("settings", "idwidth", 1000);
ini_close();

idealwidth = 0;
zoom = 1;
maxzoom = 1;

aspectratio = display_get_width() /  display_get_height();
//aspectratio = clamp(aspectratio, 21/9, 16/10);

idealwidth = round(idealheight*aspectratio);
d = 2;
// perfect pixel scaling
if (display_get_height() mod idealheight != 0) {
    d2 = round(display_get_height() / idealheight);
    idealheight = display_get_height() / d2;
}

idealwidth = round(idealheight*aspectratio);

// check for odd numbers
if (idealwidth &amp; 1) {
    idealwidth++;
}
if (idealheight &amp; 1) {
    idealheight++;
}

// calculate maxzoom
maxzoom = floor(display_get_width() / idealwidth);

if idealwidth &lt; 1200 {
    global.lowres = true;
    var divi = 2;
} else {
    global.lowres = false;
    var divi = 1;
}

for (var i = 1; i &lt;= room_last; i++) {
    if room_exists(i) {
        if i == 1 {
            room_set_view(i, 0, true, 0, 0, idealwidth, idealheight, 0, 0, idealwidth, idealheight, 0, 0, 0, 0, -1);
            room_set_view_enabled(i, true);
        } else if i == 2 { // lv 1
            room_set_view(i, 0, true, 0, 500, idealwidth/(3-global.lowres), idealheight/(3-global.lowres), 0, 0, idealwidth, idealheight, 0, 0, 0, 0, -1);
            room_set_view_enabled(i, true);            
        } else if i == 3 { // lv 2
            room_set_view(i, 0, true, 470, 800, idealwidth/(3-global.lowres), idealheight/(3-global.lowres), 0, 0, idealwidth, idealheight, 0, 0, 0, 0, -1);
            room_set_view_enabled(i, true);            
        } else if i == 4 { // lv 3
            room_set_view(i, 0, true, 470, 800, idealwidth/(3-global.lowres), idealheight/(3-global.lowres), 0, 0, idealwidth, idealheight, 0, 0, 0, 0, -1);
            room_set_view_enabled(i, true);            
        } else if i == 5 { // lv 4
            room_set_view(i, 0, true, 470, 800, idealwidth/(3-global.lowres), idealheight/(3-global.lowres), 0, 0, idealwidth, idealheight, 0, 0, 0, 0, -1);
            room_set_view_enabled(i, true);            
        }
    }
}

surface_resize(application_surface, idealwidth, idealheight);
display_set_gui_size(idealwidth, idealheight);
window_set_size(idealwidth, idealheight);
alarm[0] = 1;
room_goto(room_next(room));

// full screen
ini_open("conf.ini");
global.fullscreen = ini_read_real("settings", "fullscreen", 1);
ini_close();

if global.fullscreen {
    window_set_fullscreen(true);
    surface_resize(application_surface, idealwidth*zoom, idealheight*zoom);    
} else {
    window_set_fullscreen(false);
    surface_resize(application_surface, idealwidth*zoom, idealheight*zoom);       
}

alarm[0] = 1; // pour centrer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// center window
window_center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEBUG
/*
draw_text(50, 50, "aspectratio = " + string(aspectratio));
draw_text(50, 70, "ideal width = " + string(idealwidth));
draw_text(50, 90, "ideam height = " + string(idealheight));
draw_text(50, 110, "d = " + string(d));
draw_text(50, 130, "zoom = " + string(zoom));
draw_text(50, 150, "view_wview = " + string(view_wview[0]));
draw_text(50, 170, "view_hview = " + string(view_hview[0]));
draw_text(50, 190, "view_wport = " + string(view_wport[0]));
draw_text(50, 210, "view_hport = " + string(view_hport[0]));
if room != rm_mainmenu {
    draw_text(50, 250, "viewzoom = " + string(obj_controller.viewzoom));
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
