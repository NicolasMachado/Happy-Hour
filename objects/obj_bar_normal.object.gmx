<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bar_normal_0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_bar</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// item creation

/// init
var myID = id;

// get info from global item array
itemnumber = 0;
name = global.items[1,itemnumber];
price = global.items[2,itemnumber];


// build according to current rotation

if global.itemrot == 0 {
    depth = -y-100;
    mp_grid_add_cell(global.grid, floor(x/32), floor((y/32)+3));
    with (instance_create(x, y, obj_server_bar_spot)) { barID = myID; angle = global.itemrot; }
    with (instance_create(x, y+32, obj_server_bar_spot)) { barID = myID; angle = global.itemrot; }
    with (instance_create(x, y+64, obj_server_bar_spot)) { barID = myID; angle = global.itemrot; }
} else if global.itemrot == 90 {
    depth = -y-32;
    mp_grid_add_cell(global.grid, floor(x/32)+3, floor(y/32)+1);
    with (instance_create(x, y+32, obj_server_bar_spot)) { barID = myID; angle = global.itemrot; }
    with (instance_create(x+32, y+32, obj_server_bar_spot)) { barID = myID; angle = global.itemrot; }
    with (instance_create(x+64, y+32, obj_server_bar_spot)) { barID = myID; angle = global.itemrot; }
} else if global.itemrot == 180 {
    depth = -y-32;
    mp_grid_add_cell(global.grid, floor(x/32)+1, floor(y/32));
    with (instance_create(x+32, y+32, obj_server_bar_spot)) { barID = myID; angle = global.itemrot; }
    with (instance_create(x+32, y+64, obj_server_bar_spot)) { barID = myID; angle = global.itemrot; }
    with (instance_create(x+32, y+96, obj_server_bar_spot)) { barID = myID; angle = global.itemrot; }
} else if global.itemrot == 270 {
    depth = -y-32;
    mp_grid_add_cell(global.grid, floor(x/32), floor(y/32));
    with (instance_create(x+32, y, obj_server_bar_spot)) { barID = myID; angle = global.itemrot; }
    with (instance_create(x+64, y, obj_server_bar_spot)) { barID = myID; angle = global.itemrot; }
    with (instance_create(x+96, y, obj_server_bar_spot)) { barID = myID; angle = global.itemrot; }
}

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
